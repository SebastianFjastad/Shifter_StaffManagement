@using Shifter.Managers.Web.ViewModels
@model StaffMemberViewModel

@{
    var mode = Model.EditMode ? "Edit: " + Model.Staff.FullName : "Add new staff member";
    var modeVisibility = Model.EditMode ? "visible" : "hidden";
}

<style>
    
</style>

<ul id="tabs" class="nav nav-tabs">
    <li role="presentation"><a id="detailsTab" href="#details" data-toggle="tab">Details</a></li>
    <li role="presentation"><a id="leaveTab" href="#leave" data-toggle="tab">Leave</a></li>
</ul>

<div id="myTabContent" class="tab-content">
    <div role="tabpanel" class="tab-pane fade" id="details" aria-labelledby="details-tab">
        <div class="row marginTop">
            <div>
            @{
                var showErrors = Model.HasErrors ? "showElement" : "hideElement";
                var showMessage = Model.HasMessages ? "showElement" : "hideElement";
            }

            <div id="errorBox" class="alert alert-danger alert-dismissable timeoutAlert @showErrors">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <div id="errorMessages">
                    @foreach (var error in Model.Errors)
                    {
                        <div>@error.Text</div>
                    }
                </div>
            </div>
            <div id="infoBox" class="alert alert-success alert-dismissable timeoutAlert @showMessage">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <div id="infoMessages">
                    @foreach (var msg in Model.Messages)
                    {
                        <div>@msg.Text</div>
                    }
                </div>
            </div>
        </div>
        </div>


        <div class="row marginTop" style="margin-bottom: 5px;">
            <a href="@Url.Action("ManageWaiters", "Waiter")">
                <span class="glyphicon glyphicon-circle-arrow-left" style="font-size: 28px; margin-right: 10px; float: left;"></span>
            </a>
            <h4 style="margin-top: 7px; float: left; margin-bottom: 20px; margin-right: 25px;">@mode</h4>
            @if (!Model.StaffMemberHasNoEmailAddress && Model.EditMode)
            {
                <input id="resetPassword" type="button" class="btn btn-default float-left" style="margin-bottom: 10px;" value="Resend password" />
            }
        </div>

        <div class="row">
            <form id="saveWaiterForm" class="form-horizontal" role="form" action="@Url.Action("SaveWaiter", "Waiter")" method="POST">
                @Html.HiddenFor(model => model.Staff.Id)
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group row">
                            <label class="col-sm-3" for="selectedStaffType">Type</label>
                            <div class="col-sm-9 dropdown">
                                <select id="selectedStaffType" name="Staff.StaffType.Id" class="form-control pointer">
                                    @foreach (var staffType in Model.StaffTypes)
                                    {
                                        var selected = Model.Staff.StaffType.IsNotNull() && Model.Staff.StaffType.Id == staffType.Id ? "selected" : string.Empty;
                                        <option @selected value="@staffType.Id">@staffType.Name</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-3" for="Waiter_FirstName">Name</label>
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.Staff.FirstName, new { data_validation_name = "Name", @class = "required form-control" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-3" for="Waiter_Surname">Surname</label>
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.Staff.LastName, new { data_validation_name = "Surname", @class = "required form-control" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-3" for="Waiter_ContactNumber">Contact number</label>
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.Staff.ContactNumber, new { data_validation_name = "Contact number", @class = "required form-control" })
                            </div>
                        </div>
                        <div class="form-group row emailWaiterHelp">
                            <div class="col-sm-3">
                                @{
                                    var noChecked = Model.StaffMemberHasNoEmailAddress ? "checked" : string.Empty;
                                    var yesChecked = !Model.StaffMemberHasNoEmailAddress ? "checked" : string.Empty;
                                }
                                <label for="Waiter_EmailAddress">Email address</label>
                                <div>
                                    <label><input id="noEmail" class="hasEmailCheck" type="radio" name="StaffMemberHasNoEmailAddress" value="true" @noChecked /> No</label>
                                    <label style="margin-left: 10px"><input type="radio" class="hasEmailCheck" name="StaffMemberHasNoEmailAddress" @yesChecked value="false" /> Yes</label>
                                </div>
                            </div>
                            <div class="col-sm-9">
                                 @Html.TextBoxFor(model => model.Staff.EmailAddress, new { data_validation_name = "Email address", @id = "emailInput", @class = "required form-control" })
                                <div id="emailMessage" style="display: none">
                                    NB Without an email address we cant send them their login details.
                                </div>
                            </div>
                        </div>
                        <div class="form-group row maxShiftsWaiterHelp">
                            <label class="col-sm-3" for="Waiter_MaxNumberOfShiftsPerWeek">Max shifts per week</label>
                            <div class="col-sm-9">
                                @Html.TextBoxFor(model => model.Staff.MaxNumberOfShiftsPerWeek, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group isActiveWaiterHelp">
                            <div class="col-xs-12 isActive">
                                @Html.CheckBoxFor(model => model.Staff.IsActive, new { @class = "checkbox floatLeft"})
                                <label class="floatLeft" style="margin-left: 10px; margin-top: 5px;">Active</label>
                            </div>
                        </div>
                        <div class="form-group canSwapWaiterHelp">
                            <div class="col-xs-12 canSwap">
                                @Html.CheckBoxFor(model => model.Staff.CanSwapShifts, new { @class = "checkbox floatLeft" })
                                <label class="floatLeft" style="margin-left: 10px; margin-top: 5px;">Can swap shifts</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-12">
                                @Html.CheckBoxFor(model => model.Staff.CanWorkDoubles, new { @class = "checkbox floatLeft" })
                                <label class="floatLeft" style="margin-left: 10px; margin-top: 5px;">Can work doubles</label>
                            </div>
                        </div>
                        <div class="form-group weakStrongWaiterHelp">
                            <div class="col-xs-12">
                                @{
                                    var isRookie = Model.Staff.IsExperienced ? string.Empty : "checked";
                                }
                                <input class="radio floatLeft" type="radio" name="Waiter.IsExperienced" value="false" @isRookie />
                                <label class="rookie floatLeft" style="margin-left: 10px; margin-top: 5px;">Beginner</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-12">
                                @{
                                    var isAdvanced = Model.Staff.IsExperienced ? "checked" : string.Empty;
                                }
                                <input class="radio floatLeft" type="radio" name="Waiter.IsExperienced" value="true" @isAdvanced />
                                <label class="experienced floatLeft" style="margin-left: 10px; margin-top: 5px;">Experienced</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-12">
                        <input id="saveWaiter" type="button" class="btn btn-success" value="Save" />
                        @Html.ActionLink("Cancel", "ManageWaiters", null, new { @class = "btn btn-default col-sm-offset-1" })
                        <input id="deleteWaiter" type="button" class="btn btn-danger col-sm-offset-1" style="visibility: @modeVisibility;" value="Delete" />
                    </div>
                </div>
            </form>
        </div>

        <div id="confirmDelete" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title">Delete waiter</h4>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this staff members?
                        All shifts will need to be reassigned or deleted before the system will allow this.
                        <form id="deleteWaiterForm" action="@Url.Action("DeleteWaiter", "Waiter")" method="POST">
                            <input type="text" style="display: none;" id="waiterIdToDelete" name="id" value="@Model.Staff.Id" />
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button id="deleteWaiterConfirm" type="button" class="btn btn-primary">Delete</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div role="tabpanel" class="tab-pane fade" id="leave" style="padding-top:10px;" aria-labelledby="leave-tab">
        @{
            var showLeaveErrors = Model.LeaveErrors.HasErrors() ? "showElement" : "hideElement";
        }

        <div id="errorBox" class="alert alert-danger alert-dismissable timeoutAlert @showLeaveErrors">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            <div id="errorMessages">
                @foreach (var error in Model.LeaveErrors)
                {
                    <div>@error.Text</div>
                }
            </div>
        </div>

        @foreach (var item in Model.Staff.UnavailabilityRecords)
        {
            <div class="timeOffContainer row">
                <div class="col-xs-12">
                    <div class="col-sm-4">
                        <div class="input-daterange input-group timeOffDates">
                            <div class="pull-left">
                                <label>@item.UnavailableFrom.DayOfWeek @item.UnavailableFrom.ToString("dd") @item.UnavailableFrom.ToString("MMM")</label>
                            </div>
                            <div class="pull-left">
                                <span style="padding-left: 15px;padding-right: 15px;"><b>to</b></span>
                            </div>
                            <div class="pull-left">
                                <label class="">@item.UnavailableTo.DayOfWeek @item.UnavailableTo.ToString("dd") @item.UnavailableTo.ToString("MMM")</label><br />
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <input class="btn btn-danger removeTimeOff" style="width: 100px;" value="Remove" data-id="@item.Id" data-from-date="@item.UnavailableFrom" data-to-date="@item.UnavailableTo" />
                    </div>
                </div>
            </div>
        }

        <div class="form-group col-xs-12">
            <input id="addTimeOff" class="btn btn-success" value="Book new time" />
        </div>

        <div id="savePopup" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title">Save time off</h4>
                    </div>
                    <div class="modal-body">
                        <form id="saveTimeOffForm" method="POST" action="@Url.Action("SaveTimeOff", "Waiter")">
                            <input id="editfrom" type="text" class="input-sm form-control timeOffDates" name="unavailability.UnavailableFrom" />
                            <span class="input-group-addon">to</span>
                            <input id="editTo" type="text" class="input-sm form-control timeOffDates" name="unavailability.UnavailableTo" />
                            <input type="hidden" id="timeOffId" name="unavailability.Id" />
                            <input type="hidden" name="staffMemberId" value="@Model.Staff.Id" />
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id="saveTimeOffCancel" type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button id="saveTimeOffConfirm" type="button" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </div>

        <div id="confirmDeletePopup" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title">Delete time off</h4>
                    </div>
                    <div class="modal-body">
                        <form id="deleteTimeOffForm" method="POST" action="@Url.Action("DeleteTimeOff", "Waiter")">
                            <label id="editFrom" class="input-sm form-control"></label>
                            <span class="input-group-addon">to</span>
                            <label id="editTo" class="input-sm form-control"></label>
                            <input type="hidden" id="timeOffId" name="unavailabilityId" />
                            <input type="hidden" name="staffMemberId" value="@Model.Staff.Id" />
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button id="deleteTimeOffCancel" type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button id="deleteTimeOffConfirm" type="button" class="btn btn-primary">Delete</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(function () {
        var waiter = new Waiter();
        waiter.Load();

        setEmailInputVisibility($("#noEmail"));

        $(".hasEmailCheck").click(function () {
            setEmailInputVisibility();
        });

        function setEmailInputVisibility() {
            if ($("#noEmail").is(":checked")) {
                $("#emailInput").removeClass("required");
                $("#emailInput").hide();
                $("#emailMessage").show();
            } else {
                $("#emailInput").addClass("required");
                $("#emailInput").show();
                $("#emailMessage").hide();
            }
        }

        $("#tabs a").click(function (e) {
            e.preventDefault();
            $(this).tab('show');
        });

        if ('@Model.ShowLeave' == 'True') {
            $("#leaveTab").click();
        } else {
            $("#detailsTab").click();
        }

        $('.isActive').on('click', function() {
            var isChecked = $('.isActive > input').is(':checked');
            var canswap = $('.canSwap > input');
            if (isChecked) {
                canswap.prop('disabled', false);
            } else {
                canswap.prop('disabled', true);
            }
        });

        
    });

    $('#saveWaiterForm').on('change keyup keydown', 'input, textarea, select', function () {
        $(this).addClass('changed-input');
    });

    $(window).on('beforeunload', function () {
        if ($('.changed-input').length) {
            return 'You haven\'t saved your changes. Do you wish to continue?';
        }
    });
</script>